/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedCodequestionImport } from './routes/_authenticated/codequestion'
import { Route as AuthenticatedBlameImport } from './routes/_authenticated/blame'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedCodequestionRoute = AuthenticatedCodequestionImport.update({
  path: '/codequestion',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedBlameRoute = AuthenticatedBlameImport.update({
  path: '/blame',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/blame': {
      id: '/_authenticated/blame'
      path: '/blame'
      fullPath: '/blame'
      preLoaderRoute: typeof AuthenticatedBlameImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/codequestion': {
      id: '/_authenticated/codequestion'
      path: '/codequestion'
      fullPath: '/codequestion'
      preLoaderRoute: typeof AuthenticatedCodequestionImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedBlameRoute,
    AuthenticatedCodequestionRoute,
  }),
  AboutRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/blame",
        "/_authenticated/codequestion"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/_authenticated/blame": {
      "filePath": "_authenticated/blame.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/codequestion": {
      "filePath": "_authenticated/codequestion.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
